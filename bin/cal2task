#!/usr/bin/env python

import os
import sys
import vobject
import datetime
from pytz import timezone
import tempfile
import subprocess

DATE_FORMAT='%Y.%m.%d-%H:%M'
TIMEZONE = timezone('Europe/Budapest')
EMAIL='peter.vaczi@nsn.com'

f = open(sys.argv[1])
request = vobject.readOne(f)

def read_value(src, field):
    if field in src.vevent.contents:
        return src.vevent.contents[field][0].value
    return ''

def copy_value(src, dst, field):
    if field in src.vevent.contents:
        dst.vevent.add(src.vevent.contents[field][0])

def format_name(name):
    mail = name.value.split(':')[1]
    if 'CN' in name.params:
        return '%s <%s>' % (name.params['CN'][0], mail)
    else:
        return '<%s>' % mail

# colect some info and modify timezone to local one
description = read_value(request, 'description')
location    = read_value(request, 'location')
summary     = read_value(request, 'summary')
start       = request.vevent.dtstart.value.astimezone(TIMEZONE)
stop        = request.vevent.dtend.value.astimezone(TIMEZONE)
sender      = request.vevent.organizer.value.split(':')[1].encode()
organizer   = format_name(request.vevent.organizer)

# display summary of the event
print description
print 20 * '~'
print 'participants:'
for att in request.vevent.contents['attendee']:
    print '  %s' % format_name(att)
    
print
print 'summary : %s' % summary
print 'sender  : %s' % organizer
print 'location: %s' % location
print 'start   : %s' % start
print 'end     : %s' % stop

# what to do
choice = ''
while choice.lower() not in ['a', 'd', 't', 'c']:
   choice = raw_input('\nAccept/Decline/Tentative/Cancel [a/d/t/c] ? ')

if 'a' == choice:
    choice = 'ACCEPTED'
elif 't' == choice:
    choice = 'TENTATIVE'
elif 't' == choice:
    choice = 'DECLINED'
else: 
    sys.exit(0)

# generate the response
response = vobject.newFromBehavior('vcalendar')
response.add('method')
response.method.value = "REPLY"

response.add('vevent')
for i in ["uid", "summary", "dtstart", "dtend", "organizer"]:
    copy_value(request, response, i)

response.vevent.add('dtstamp')
response.vevent.dtstamp.value = datetime.datetime.utcnow().replace(
    tzinfo = request.vevent.dtstamp.value.tzinfo)

response.vevent.add('attendee')
response.vevent.attendee.value = 'mailto:%s' % EMAIL
response.vevent.attendee.params['PARTSTAT'] = [choice]

# create an ics file and send it
fd, path = tempfile.mkstemp(suffix='.ics')
os.write(fd, response.serialize())
os.close(fd)

sendCmd = ['mutt',
           '-a', path, # attachment
           '-s', '%s: %s' % (choice.capitalize(), summary ), # subject
           '--', sender]
#subprocess.call(['cat', path])

os.unlink(path)

# add the event to taskwarrior
cmd = ['task', 'add']
cmd.append('due:%s' % start.strftime(DATE_FORMAT))
cmd.append('"%s (where: %s, duration: %s)"' % (summary, location, stop - start))

if choice in ['ACCEPTED', 'TENTATIVE']:
    subprocess.call(cmd)
